<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.fastboot.server.producems.mapper.WorkOrderMapper">

    <insert id="createWorkOrderType">
        insert into workordertype (`name`, guid)
        values (#{name}, #{guid})
    </insert>
    <update id="updateWorkOrderType">
        update workordertype
        set name =#{name}
        where guid = #{guid};
    </update>
    <delete id="deleteWorkOrderType">
        delete
        from workordertype
        where guid = #{guid}
    </delete>
    <select id="listWorkOrderType" resultType="com.example.fastboot.server.producems.model.Workordertype">
        select guid, `name`
        from workordertype;
    </select>
    <insert id="createWorkOrderCategory">
        insert into workordercategory (`name`, workOrderTypeGuid, guid)
        values (#{name}, #{workOrderTypeGuid}, #{guid})
    </insert>

    <update id="updateWorkOrderCategory">
        update workordercategory
        set name =#{name}
        where guid = #{guid};
    </update>
    <delete id="deleteWorkOrderCategory">
        delete
        from workordercategory
        where guid = #{guid}
    </delete>
    <select id="listWorkOrderCategory" resultType="com.example.fastboot.server.producems.model.Workordercategory">
        select guid, `name`, workOrderTypeGuid
        from workordercategory
        <where>
            <if test="workOrderTypeGuid != null and workOrderTypeGuid!=''">
                workOrderTypeGuid = #{workOrderTypeGuid}
            </if>
        </where>
    </select>
    <select id="listWorkOrderCategoryByTypeGuid"
            resultType="com.example.fastboot.server.producems.model.Workordercategory">
        select id
        from workordercategory
        where workOrderTypeGuid = #{typeGuid};
    </select>
    <insert id="createWorkOrderItem">
        insert into workorderitem (`name`, workOrderCategoryGuid, guid)
        values (#{name}, #{workOrderCategoryGuid}, #{guid})

    </insert>
    <insert id="insertReviewRelationship">
        insert into reviewrelationship (userGuid, reviewGuid) VALUE (#{userGuid},#{reviewGuid})
    </insert>
    <update id="updateWorkOrderItem">
        update workorderitem
        set name =#{name}
        where guid = #{guid};
    </update>
    <update id="updateReviewRelationship">
        update reviewrelationship
        set reviewGuid = #{reviewGuid}
        where userGuid = #{userGuid}
    </update>
    <update id="updateWorkOrderStatus">
        update workorder
        set status = #{status},
            reason=#{reason},
            reviewGuid=#{reviewGuid},
            reviewName=#{reviewName}
        where guid=#{guid}
    </update>
    <delete id="deleteWorkOrderItem">
        delete
        from workorderitem
        where guid = #{guid}
    </delete>
    <delete id="deleteWorkOrder">
        delete
        from workorder
        where guid = #{guid};
    </delete>
    <select id="listWorkOrderItem" resultType="com.example.fastboot.server.producems.model.Workorderitem">
        select guid, `name`, workOrderCategoryGuid
        from workorderitem
        <where>
            <if test="workOrderCategoryGuid != null and workOrderCategoryGuid!=''">
                workOrderCategoryGuid = #{workOrderCategoryGuid}
            </if>
        </where>
    </select>
    <select id="listReviewRelationship"
            resultType="com.example.fastboot.server.producems.model.Reviewrelationship">
        select *
        from reviewrelationship
    </select>
    <select id="getReviewGuid" resultType="java.lang.String">
        select reviewGuid
        from reviewrelationship
        where userGuid = #{userGuid}
    </select>
    <select id="listWorkOrderForWorkDuration"
            resultType="com.example.fastboot.server.producems.model.Workorder">
        SELECT
        t1.guid,
        t2.`name` projectName,
        t1.createGuid,
        t6.nick_name createName,
        t1.projectGuid,
        t1.workDuration,

        t1.projectDepworkType,
        t2.projectNo projectNo,
        t3.`name` workTypeName,
        t4.`name` workCategoryName,
        t5.`name` workItemName
        FROM
        workorder t1
        LEFT JOIN project t2 ON t1.projectGuid = t2.guid
        left join workordertype t3 on t3.guid=t1.workTypeGuid
        left join workordercategory t4 on t4.guid=t1.workCategoryGuid
        left join workorderitem t5 on t5.guid=t1.demandItemGuid
        LEFT JOIN sys_user t6 on t6.user_guid=t1.createGuid
        <where>
            t1.createTime between #{workDuration.startTime} and #{workDuration.endTime}
            <if test="workDuration.createUserGuids!=null and workDuration.createUserGuids!=''">
                and t1.createGuid in
                <foreach collection="workDuration.createUserGuids.split(',')" close=")" open="(" separator=","
                         item="item">
                    #{item}
                </foreach>
            </if>
            <if test='workDuration.workTypeGuids!=null and workDuration.workTypeGuids != "100"'>
                and t1.workTypeGuid in
                <foreach collection="workDuration.workTypeGuids.split(',')" close=")" open="(" separator=","
                         item="item">
                    #{item}
                </foreach>
            </if>
            <if test='workDuration.projectGuids!=null and workDuration.projectGuids != "100"'>
                and t1.projectGuid in
                <foreach collection="workDuration.projectGuids.split(',')" close=")" open="(" separator="," item="item">
                    #{item}
                </foreach>
            </if>
            <if test='workDuration.workCategoryGuids!=null and workDuration.workCategoryGuids != "100"'>
                and t1.workCategoryGuid in
                <foreach collection="workDuration.workCategoryGuids.split(',')" close=")" open="(" separator=","
                         item="item">#{item}
                </foreach>
            </if>
            and t1.status=3
            order by t1.projectGuid DESC,
            t1.createGuid DESC
        </where>
    </select>
    <select id="listWorkOrder" resultType="com.example.fastboot.server.producems.model.Workorder">
        select
        wo.guid,wo.createName,wo.reviewName,wo.workTypeGuid,p.name as projectName,wo.createGuid,wo.projectGuid,
        wo.workCategoryGuid,wo.workItemGuid,wo.createTime,wo.status,
        wo.workDuration,wo.content,wi.name workItem,wt.name workType,
        wc.name workCategory,p.projectNo,wo.projectDepworkType,d.dept_name departmentName
        from workorder wo
        left join workorderitem wi on wo.workItemGuid = wi.guid
        left join workordertype wt on wo.workTypeGuid = wt.guid
        left join workordercategory wc on wo.workCategoryGuid = wc.guid
        left join project p on p.guid = wo.projectGuid
        left join sys_dept d on d.dept_guid = wo.departmentGuid
        <where>

            <if test="statuss!=null and statuss!='100'">
                wo.status in
                <foreach collection="statuss.split('、')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="reviewGuid!=null and reviewGuid!=''">
                and wo.reviewGuid=#{reviewGuid}
            </if>
            <if test="startTime !='' and endTime !='' and startTime!=null and endTime!=null">
                and wo.createTime between #{startTime} and #{endTime}
            </if>
            <if test="projectGuid!=null and projectGuid!='' and projectGuid!='100'">
                and wo.projectGuid in
                <foreach collection="projectGuid.split('、')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="createGuid!=null and createGuid!='100'">
                and wo.createGuid in
                <foreach collection="createGuid.split('、')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="departmentGuid!=null and departmentGuid!=''">
                and wo.departmentGuid in
                <foreach collection="departmentGuid.split('、')" separator="," open="(" close=")" item="item">
                    #{item}
                </foreach>
            </if>

        </where>
        order by wo.createTime desc

    </select>
    <select id="listProjectDepworkType"
            resultType="com.example.fastboot.server.producems.model.EngineeringWorkType">
        select *
        from engineeringworktype
    </select>
    <select id="listWorkOrderByCreateParam" resultType="com.example.fastboot.server.producems.model.Workorder">
        select wo.guid,
               wo.createName,
               wo.teamGroup,
               wo.createGuid,
               wo.departmentName,
               wo.content,
               wo.departmentGuid,
               wo.workDuration,
               wo.workTypeGuid,
               p.name projectName,
               wo.projectGuid,
               wo.workCategoryGuid,
               wo.workItemGuid,
               wo.demandItemName,
               wo.demandItemGuid,
               wo.createTime,
               wo.reason,
               wo.status,
               wo.projectDepworkType,
               wo.reviewGuid,
               wo.reviewName,
               wi.name workItem,
               wt.name workType,
               wc.name workCategory
        from workorder wo
                 left join  workorderitem wi on wo.workItemGuid = wi.guid
                 left join workordertype wt on wo.workTypeGuid = wt.guid
                 left join workordercategory wc on wo.workCategoryGuid = wc.guid
                 left join project p on wo.projectGuid = p.guid
        where wo.createGuid = #{createGuid} and wo.createTime like concat(#{createTime},'%')
    </select>
    <select id="listWorkOrderByGuidList" resultType="com.example.fastboot.server.producems.model.Workorder">
        select
        wo.guid,wo.workTypeGuid,wo.projectGuid,p.name peojectName,wo.workCategoryGuid,wo.workItemGuid,wo.createTime,
        wo.status,wo.reason,wo.createName,wo.reviewName,wo.workDuration,wo.content,wo.createGuid,
        wi.name workItem,wt.name workType,wc.name workCategory
        from workorder wo
        left join  workorderitem wi on wo.workItemGuid = wi.guid
        left join workordertype wt on wo.workTypeGuid = wt.guid
        left join workordercategory wc on wo.workCategoryGuid = wc.guid
        left join project p on wo.projectGuid = p.guid
        where wo.guid in
        <foreach collection="guidList" item="guid" open="(" close=")" separator=",">
            #{guid}
        </foreach>
    </select>

</mapper>
